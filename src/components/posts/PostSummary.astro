---
interface Props {
    post: any
    smallMode: string
    largeMode: string
}

import FormattedDate from "../FormattedDate.astro";
import { Image } from 'astro:assets';
import getPostData from "../../scripts/getPostData";
import getMediaMetadata from "../../scripts/getMediaMetadata";
import {getSiteConfig} from "../../scripts/getSiteConfig";
import toSafeId from '../../scripts/toSafeId';

const {
    post,
    smallMode = "card",
    largeMode = "card",
} = Astro.props;

const siteConfig = await getSiteConfig();
const { path } = getPostData(post);
const href = `/${siteConfig.blog.prefix}${path}`;

const { frontmatter } = post;
console.log("post", frontmatter);
const { title, publishDate, description, author, readingTime, thumbnail:thumbnailSrc = null} = frontmatter;
const id = toSafeId("post-summary");
const imgId = `${id}-img`;
const classExt = `sm-${smallMode}-lg-${largeMode}`;
---

<!-- post summary text -->
<div class={`post-summary-wrapper-${classExt}`}>

    <!-- post thumbnail -->
    {thumbnailSrc && (
            <div class={`post-thumbnail-${classExt}`}>
                <a href={href} class={`post-thumbnail-link-${classExt}`}>
                    <Image id={imgId} src={getMediaMetadata(thumbnailSrc)} alt={title}
                           class={`post-thumbnail-img-${classExt}`} />
                </a>
            </div>
    )}
    <div class={`post-details-${classExt}`}>
        <!-- post title -->
        <div class={`post-title-${classExt} ${thumbnailSrc
            ? `post-title-offset-with-img-${classExt}`
            : `post-title-offset-no-img-${classExt}`}`}>
            <h3 class={`post-title-link-${classExt}`}>
                <a href={href}>{title}</a>
            </h3>
        </div>

        <div class={`post-details-body-${classExt}`}>
            <!-- excerpt -->
            <div class={`post-excerpt-${classExt}`}>
                <p>{description}</p>
            </div>

            <!-- footer -->
            <div class={`post-item-footer-${classExt}`}>
                <div class={`post-item-date-${classExt}`}>
                    <FormattedDate date={publishDate} />
                </div>
                <div class={`post-item-reading-time-${classExt}`}>
                    <span class="footer-caption">read time:</span> {readingTime}
                </div>
                <div class={`post-item-author-${classExt}`}>
                    <span class="footer-caption">by:</span> {author}
                </div>
            </div>

        </div>
        <div>
            <a class={`post-link-${classExt}`} href={href}>Read more Â»</a>
        </div>
    </div>
</div>
