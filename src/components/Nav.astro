---
import ThemeToggleButton from './ThemeToggleButton.svelte';
import SiteLogo from './SiteLogo.astro';
import {getSiteConfig} from "../utils/getSiteConfig";
const siteConfig = await getSiteConfig();
const { current = '', showTheme = false } = Astro.props;
const selected = "selected max-w-fit text-nowrap text-left lg:text-center lg:px-2 py-1";
const notSelected = "max-w-fit text-nowrap text-left lg:text-center lg:px-2 py-1";

const leftNav = siteConfig.navbar.left;
const rightNav = siteConfig.navbar.right;
const {dark, light, alt} = siteConfig.navbar.logo;
---

<style>
  @media print {
    .navbar {
      display: none;
    }
  }
</style>

<div class="navbar z-10 fixed top-0 left-0 w-full mx-auto px-1 lg:px-2 py-4 flex flex-row">
  <div class="flex flex-row items-start py-1">
    <button id="menu" aria-label="Toggle Menu" class="lg:hidden">
      <svg class="w-6 h-6 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <path class="navmenu-toggle" fill-rule="evenodd"
              d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z">
        </path>

        <path class="navmenu-toggle hidden" fill-rule="evenodd" clip-rule="evenodd"
              d="M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z">
        </path>
      </svg>
    </button>
  </div>

  <div class="lg:flex lg:flex-row min-w-48 w-full">
    <!-- logo -->
    <a class={current === "" ? selected : notSelected} href='/'>
      <SiteLogo alt={alt}
                dark={dark}
                light={light}
                class="site-logo" />
    </a>
    <!-- left nav -->
    <nav class="flex flex-col items-start lg:flex-row">
      <div class="navmenu-toggle hidden lg:flex">
        {leftNav.map((item, _) => (
            <a href={item.href} class={current === item.code ? selected : notSelected}>
              {item.label}
            </a>
        ))}
      </div>
    </nav>
    <!-- right nav -->
    <nav class="flex flex-col lg:items-end lg:flex-row lg:justify-end" >
      <div class="navmenu-toggle hidden lg:flex">
      {rightNav.map((item, _) => (
          <a href={item.href} class={current === item.code ? selected : notSelected}>
            {item.label}
          </a>
      ))}
      </div>
    </nav>
  </div>
  <!-- {showTheme && -->
  <div class="theme-toggle-container align-top pr-20 lg:pr-8"  >
    <ThemeToggleButton client:load />
  </div>
  <!-- } -->
</div>
<script is:inline data-astro-rerun>
  function initButton() {
    const menuButton = document.getElementById("menu");
    menuButton.addEventListener("click", () => {
      [...document.querySelectorAll(".navmenu-toggle")].forEach((Element) => {
        Element.classList.toggle("hidden");
      });
    });
  }

  initButton();

  // Re-initialize after swapping pages
  // document.addEventListener("astro:after-swap", initButton);
</script>
